{"version":3,"sources":["App.js","index.js"],"names":["Box","position","color","mesh","useRef","useFrame","current","rotation","z","x","y","useState","expand","setExpand","props","useSpring","scale","onClick","ref","attach","args","Sphere","Cylinder","App","colorManagement","camera","few","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Math","PI","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c29e05aa.chunk.js","sourcesContent":["import React,{useRef,useState} from 'react'\nimport { Canvas , useFrame} from 'react-three-fiber'\nimport {useSpring,a} from \"@react-spring/three\";\n\nimport './App.css';\n\nconst Box=({position,color})=>{\n  const mesh=useRef(null);\n  useFrame(()=>(mesh.current.rotation.z = mesh.current.rotation.x = mesh.current.rotation.y +=0.01));\n  const [expand, setExpand]=useState(false);\n  const props=useSpring({scale: expand ? [1.4,1.4,1.4]:[1,1,1],})\n  return (\n       <a.mesh onClick={()=>setExpand(!expand)} scale={props.scale} position={position} ref={mesh}>\n         <boxBufferGeometry attach=\"geometry\" args={[3,3,3]} />\n         <meshStandardMaterial attach=\"material\" color={color} />\n       </a.mesh>     \n  );\n}\n\nconst Sphere=({position, color})=>{\n  const mesh=useRef(null);\n  useFrame(()=>(mesh.current.rotation.z = mesh.current.rotation.x = mesh.current.rotation.y +=0.07));\n  const [expand, setExpand]=useState(false);\n  const props=useSpring({scale: expand ? [1.4,1.4,1.4]:[1,1,1],})\n  return (\n       <a.mesh onClick={()=>setExpand(!expand)} scale={props.scale} position={position} ref={mesh}>\n         <sphereBufferGeometry attach=\"geometry\" args={[2,100,100]} />\n         <meshStandardMaterial attach=\"material\" color={color} />\n       </a.mesh>     \n  );\n}\n\nconst Cylinder=({position,color})=>{\n  const mesh=useRef(null);\n  useFrame(()=>(mesh.current.rotation.z = mesh.current.rotation.x = mesh.current.rotation.y +=0.01));\n  const [expand, setExpand]=useState(false);\n  const props=useSpring({scale: expand ? [1.4,1.4,1.4]:[1,1,1],})\n  return (\n    <>\n       <a.mesh onClick={()=>setExpand(!expand)} scale={props.scale} position={position} ref={mesh}>\n         <cylinderBufferGeometry attach=\"geometry\" args={[1,1,4,50,true]} />\n         <meshStandardMaterial attach=\"material\" color={color} />\n       </a.mesh>   \n    </>  \n  );\n}\n\nfunction App() {\n  return(\n    <>\n     <Canvas  \n     colorManagement \n     camera={{position:[-5,2,10], few:60}} >\n       <ambientLight  intensity={0.4} />\n       <directionalLight  \n        \n        position={[0,10,0]}\n        intensity={1.4}\n        shadow-mapSize-width={1024}\n        shadow-mapSize-height={1024}\n        shadow-camera-far={50}\n        shadow-camera-left={10}\n        shadow-camera-right={10}\n        shadow-camera-top={-10}\n        shadow-camera-bottom={-10}\n       />\n       <pointLight position={[-10,0,-15]} intensity={0.5} />\n       <pointLight position={[0,-10,0]} intensity={1.2} />\n      <group>\n        <mesh \n        \n        rotation={[-Math.PI/2,0,0]} \n        position={[0,-3,0]}>\n          <planeBufferGeometry attach='geometry' args={[100,100]} />\n          <shadowMaterial attach=\"material\"  />\n        </mesh>\n      </group>\n\n       <Box position={[-4,1,-5]} color=\"#ef476f\" />\n       <Cylinder position={[-1,1,0]} color=\"#4c956c\" />\n       <Sphere position={[4,1,1]} color=\"#d00000\" />\n     </Canvas>\n    </>\n  )\n  \n};\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}